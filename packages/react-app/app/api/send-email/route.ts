import { NextRequest, NextResponse } from 'next/server';
import { sendEmail } from '@/lib/SendEmail';

type EmailParams = {
  taskTitle: string;
  creatorEmail: string;
  participant: string;
  response: string;
  aiRating: string;
  Reward: string;
  TaskBalance: string;
};

export async function POST(request: NextRequest) {
  try {
    const params: EmailParams = await request.json();

    // Create a formatted email message
    const subject = `ðŸŽ¯ New Task Response: ${params.taskTitle}`;
    
    const htmlBody = `
      <div style="font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif; max-width: 600px; margin: auto; padding: 24px; background: linear-gradient(to bottom, #F5F1E8, #FFFFFF); border: 4px solid #000000; border-radius: 16px;">
        <!-- Header -->
        <div style="background: #4E632A; color: white; padding: 24px; border-radius: 12px; margin-bottom: 24px; border: 4px solid #000000; text-align: center;">
          <h1 style="margin: 0; font-size: 28px; font-weight: bold; text-shadow: 2px 2px 0px #000000;">ðŸŽ¯ New Task Response Received</h1>
          <p style="margin: 8px 0 0 0; font-size: 16px; opacity: 0.9;">EarnBase Notification</p>
        </div>
        
        <!-- Task Details Card -->
        <div style="background-color: #FFFFFF; padding: 24px; border-radius: 12px; margin-bottom: 24px; border: 4px solid #000000; box-shadow: 4px 4px 0px #000000;">
          <h2 style="color: #000000; margin-top: 0; font-size: 20px; font-weight: bold; display: flex; align-items: center;">
            ðŸ“‹ Task Details
          </h2>
          <div style="display: grid; gap: 12px;">
            <div style="display: flex; justify-content: space-between; padding: 8px 0; border-bottom: 2px solid #F5F1E8;">
              <span style="font-weight: bold; color: #000000;">Task:</span>
              <span style="color: #000000; font-weight: 600;">${params.taskTitle}</span>
            </div>
            <div style="display: flex; justify-content: space-between; padding: 8px 0; border-bottom: 2px solid #F5F1E8;">
              <span style="font-weight: bold; color: #000000;">Participant:</span>
              <span style="color: #000000; font-weight: 600;">${params.participant}</span>
            </div>
            <div style="display: flex; justify-content: space-between; padding: 8px 0; border-bottom: 2px solid #F5F1E8;">
              <span style="font-weight: bold; color: #000000;">AI Rating:</span>
              <span style="color: #35D07F; font-weight: bold; background: #F5F1E8; padding: 4px 8px; border-radius: 6px; border: 2px solid #000000;">${params.aiRating}/10</span>
            </div>
            <div style="display: flex; justify-content: space-between; padding: 8px 0; border-bottom: 2px solid #F5F1E8;">
              <span style="font-weight: bold; color: #000000;">Reward Paid:</span>
              <span style="color: #35D07F; font-weight: bold;">${params.Reward} cUSD</span>
            </div>
            <div style="display: flex; justify-content: space-between; padding: 8px 0;">
              <span style="font-weight: bold; color: #000000;">Task Balance:</span>
              <span style="color: #000000; font-weight: 600;">${params.TaskBalance} cUSD</span>
            </div>
          </div>
        </div>

        <!-- Response Content Card -->
        <div style="background-color: #FFFFFF; padding: 24px; border-radius: 12px; margin-bottom: 24px; border: 4px solid #000000; box-shadow: 4px 4px 0px #000000;">
          <h2 style="color: #000000; margin-top: 0; font-size: 20px; font-weight: bold; display: flex; align-items: center;">
            ðŸ’¬ Response Content
          </h2>
          <div style="background: linear-gradient(to bottom, #F5F1E8, #FFFFFF); padding: 20px; border-radius: 8px; border: 2px solid #000000;">
            <div style="white-space: pre-wrap; line-height: 1.8; font-size: 16px; color: #000000; font-weight: 500;">${params.response}</div>
          </div>
        </div>

        <!-- Footer -->
   
        <!-- Brand Footer -->
        <div style="border-top: 4px solid #000000; padding-top: 20px; margin-top: 24px; text-align: center; color: #666; font-size: 14px;">
          <p style="margin: 0; font-weight: 600;">Thank you for using EarnBase</p>
        </div>
      </div>
    `;

    const textBody = `
New Task Response Received

Task: ${params.taskTitle}
Participant: ${params.participant}
AI Rating: ${params.aiRating}/10
Reward Paid: ${params.Reward} cUSD
Task Balance: ${params.TaskBalance} cUSD

Response:
${params.response}

---
This response was automatically generated by EarnBase.
    `;

    // Send email using the existing sendEmail function
    const result = await sendEmail(params.creatorEmail, subject, htmlBody, textBody);
    
    console.log('Email sent successfully:', result);
    
    return NextResponse.json({ success: true, data: result });
  } catch (error) {
    console.error('Error sending email:', error);
    return NextResponse.json(
      { error: 'Failed to send email notification' },
      { status: 500 }
    );
  }
}
